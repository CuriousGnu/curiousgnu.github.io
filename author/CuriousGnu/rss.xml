<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>www.curiousgnu.com</title>
   
   <link>http://www.curiousgnu.com/</link>
   <description>Numbers, Graphs, and Apple Strudels</description>
   <language>en-uk</language>
   <managingEditor> CuriousGnu</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>How positive are your tweets?</title>
	  <link>//tweetanalyzer</link>
	  <author>CuriousGnu</author>
	  <pubDate>2016-03-16T22:42:00+01:00</pubDate>
	  <guid>//tweetanalyzer</guid>
	  <description><![CDATA[
	     <p>In this blog post, I would like to present you <a href="(https://tweetanalyzer.net)">tweetanalyzer.net</a>, a small weekend project of mine, where you can do a sentiment analysis of your tweets or the ones of any other Twitter user. The goal was to create a fun website which uses text analysis to determine how positive someone’s tweets are.</p>

<p><a href="https://tweetanalyzer.net"><img src="/assets/images/tweetanalyzer/screen.png" alt="TweetAnalyzer.net" /></a></p>

<p>After you signed in with your Twitter account, you can type in any username and the website will automatically download the latest 200-300 tweets and calculate a positivity and vulgarity score for each of them. The method used to do this is very simple. The backend uses the AFINN word list from <a href="http://www2.imm.dtu.dk/pubdb/views/publication_details.php?id=6010">Finn Årup Nielsen</a>, which contains nearly 2,500 words rated for their positivity from -5 (negative) to +5 (positive). After removing stop words, hashtags, and URLs the script looks up every word in this list and calculates the sum for each tweet. If this sum is over zero, the tweet will be marked as positive if it’s under zero as negative. The overall positivity score for a user is then calculated as follows:</p>

<p><img src="/assets/images/tweetanalyzer/positivity_score.gif" alt="PSF" /></p>

<p>Admintingly this approach has its weakness and is not as sophisticated as many other methods classification technique out there. For example, it can not understand the context of a tweet and how a specific word (e.g., <em>sick</em>) is used. I experimented more complex Python libraries for text analysis, but unfortunately they did not run well on the Google App Engine platform if you plan to analyse thousands of tweets but only have a limited budget. I am sure that it can be done without a problem but since I never used it before and did not want to spend too much time on it, I decided to use the simple solution which I believe is sufficient for such a task.</p>

<p>The determine how vulgar a tweet is, the software uses a similar word list based method. If a tweet contains a word which is in this list, it will be marked as <em>vulgar</em>. The lack of content-awareness will, of course, lead to some mistakes. For example, news articles about <em>sex trafficking</em> or <em>rape</em> will be falsely classified as <em>vulgar</em>. So please do not take the results too seriously and rather tweet something positive about it! Feel free to <a href="&#109;&#097;&#105;&#108;&#116;&#111;:&#099;&#111;&#110;&#116;&#097;&#099;&#116;&#064;&#099;&#117;&#114;&#105;&#111;&#117;&#115;&#103;&#110;&#117;&#046;&#099;&#111;&#109;">contact me</a> if you suggestions or questions.</p>

<p>You can find the project here: <a href="https://tweetanalyzer.net">https://tweetanalyzer.net</a></p>

	  ]]></description>
	</item>

	<item>
	  <title>What are the most common words in TV shows?</title>
	  <link>//tv-show-word-clouds</link>
	  <author>CuriousGnu</author>
	  <pubDate>2016-02-27T13:42:00+01:00</pubDate>
	  <guid>//tv-show-word-clouds</guid>
	  <description><![CDATA[
	     <p>Nowadays, there are some many great shows on television or available for streaming. After binge-watching the first season of Jessica Jones, I knew that I had to post something about this topic. I have to admit that I never spend much time on text analysis, so I decided to start with the basics. The first thing I did was to create simple word clouds based on the subtitles of <em>Jessica Jones</em>, <em>The Blacklist</em>, and <em>TBBT</em>. They are an easy way to visualize how frequently certain words are used in a text or TV show.</p>

<p>Besides this basic type of word cloud, I also created a slightly different version of it. For this, I did not just count the words but also looked how close they are to a character’s name. This means that the more frequent a word is used in combination with a character’s name, the bigger it is in the word cloud.</p>

<p><a href="/assets/images/tv-wordcloud/wordcloud_jessicajones_hd.png"><img src="/assets/images/tv-wordcloud/wordcloud_jessicajones.png" alt="Jessica Jones Wordcloud" title="Jessica Jones Wordcloud" /></a></p>

<p><a href="/assets/images/tv-wordcloud/wordcloud_blacklist_hd.png"><img src="/assets/images/tv-wordcloud/wordcloud_blacklist.png" alt="The Blacklist Wordcloud" title="The Blacklist Wordcloud" /></a></p>

<p><a href="/assets/images/tv-wordcloud/wordcloud_tbbt_hd.png"><img src="/assets/images/tv-wordcloud/wordcloud_tbbt.png" alt="TBBT Wordcloud" title="TBBT Wordcloud" /></a></p>

<p>I created all those word clouds with the R package <a href="https://cran.r-project.org/web/packages/wordcloud/index.html"><em>wordcloud</em></a> which makes this job so easy. Besides that, the <em>findAssocs()</em> function from the <a href="https://cran.r-project.org/web/packages/tm/index.html"><em>tm</em></a> package was used calculate the often a word is used close to a character’s name. For the second type of word clouds, I used the correlation coefficients from this function as a weighting factor.</p>

<p>Before doing that, I replaced all the different versions of a name (e.g., Lizzy, Liz, Keen) with the name you can see in the center of the word clouds. In case you are wondering why there are not always complete words in the clouds, it is because of a process called <em>stemming</em> which reduces words to their word stem. The idea behind it is to group the different forms of a word together instead of treating every single form as an own term.</p>

<p>I hope you like this post. Please feel free to contact me if you have any questions or suggestions.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Who sells LSD on the Darktnet?</title>
	  <link>//cryptomarkets-lsd-sales</link>
	  <author>CuriousGnu</author>
	  <pubDate>2016-01-16T12:10:00+01:00</pubDate>
	  <guid>//cryptomarkets-lsd-sales</guid>
	  <description><![CDATA[
	     <p>I recently got my hands on Diana S. Dolliver’s <a href="http://dx.doi.org/10.1016/j.drugpo.2015.01.008" target="_blank">paper</a> about drug dealing on the Tor network, a hidden, uncensored network which can only be accessed by <a href="https://www.torproject.org/" target="_blank">special software</a>. I got interested this topic because it allows us to analyse transactions which used to be hidden and nearly impossible to observe.</p>

<p>Besides the many legitimate use cases of the Tor network, it also provides together with Bitcoin the technology most <em>cryptomarkets</em> use. Tor allows the side administrators to host their sites anonymously without the fear of getting arrested immediately by the FBI. Cryptomarkets function similar to eBay, in the sense that they do not sell drugs directly but provide a platform where other vendors can sell their products for a small fee. The screenshot below shows how such a site looks from a buyers perspective. I chose to take a close look at the <em>AlphaBay Market</em>, one of the biggest platforms in December 2015.</p>

<p><a href="/assets/images/darknet-lsd/screenshot.png"><img src="/assets/images/darknet-lsd/screenshot.png" alt="AlphaBay Market Screenshot" title="AlphaBay Market Screenshot" /></a></p>

<h5 id="how-to-analyse-the-alphabay-market">How to analyse the AlphaBay Market?</h5>

<p>If you access one of the larger cryptomarkets, you will probably see thousands of different offerings ranging from prescription drugs to illegal weapons. The fact that anonymous users claim to sell those products, of course, does not say anything about the actual demand and volume of the sales. This is the point where it gets interesting because the <em>AlphaBay Market</em> has a revealing feedback system which lists not only lists all products sold but also their prices, and purchase dates.</p>

<p>Assuming a constant feedback ratio, we can use this data to observe the early development of the market from only one snapshot. To automatically download the customer feedbacks I wrote a scraper in Python, which provided me with the dataset for the further analysis.</p>

<h5 id="how-much-lsd-is-sold">How much LSD is sold?</h5>

<p>Unfortunately, the scraping process of a website hidden in the Tor network is a quite slow. Therefore, I decided only to download information related to LSD sales. The diagram below shows last year’s LSD sales for the weeks 13 to 50:</p>

<p><a href="/assets/images/darknet-lsd/plot_hd.png"><img src="/assets/images/darknet-lsd/plot.png" alt="LSD Sales" title="LSD Sales" /></a></p>

<p>During November 2015, approximately <strong>$215,000</strong> worth of LSD was sold on the AlphaBay Market. I do not have a definitive explanation for the sales increase following week 44, but my guess is that problems with competing cryptomarkets drove new sellers to this platform and their existing customers followed. This theory is supported by the fact that already established vendors like <em>Lyseric025</em> were not able to significantly increase their revenue during this time.</p>

<h5 id="who-are-the-dealers">Who are the dealers?</h5>

<p>To better get a better understanding of who those LSD vendors are, we need to look at their other sales also:</p>

<p><a href="/assets/images/darknet-lsd/table_hd.png"><img src="/assets/images/darknet-lsd/table.png" alt="LSD Vendors" title="LSD Vendors" /></a></p>

<p>We can see in the table above that the leading LSD seller on the AlphaBay Market was <em>Lyseric025</em>, who had a market share of 29% in November 2015 and generated a revenue of $65,438. Only 3% of it came from B2B sales (sale over $200) which suggest a strong focus on the end customer.</p>

<p>Interestingly most sellers on this list made the majority of their revenue with LSD. One of the reasons for this could be that the LSD is supposedly produced by only a <a href="http://www.justice.gov/archive/ndic/pubs25/25921/25921p.pdf" target="_blank">few producers</a> which wholesalers are probably only interested in selling in large volumes. This would mean that a specialized vendor could increase its profit by using economies of scale. I wonder if there is a similar specialization in other more decentralized drug markets.</p>

	  ]]></description>
	</item>

	<item>
	  <title>What's the age difference in movies?</title>
	  <link>//imdb-age-gap</link>
	  <author>CuriousGnu</author>
	  <pubDate>2015-11-04T13:21:00+01:00</pubDate>
	  <guid>//imdb-age-gap</guid>
	  <description><![CDATA[
	     <p>In response to my <a href="/imdb-age-distribution">last post</a> about the distribution of ages of actresses and actors, a Reddit user suggested investigating further the age difference between female and male movie stars. In my first simple analysis, I only compared the average ages of both groups in the overall sample. Now, the next step is to check on a movie basis if there is an age difference between the leading actress and her co-star.</p>

<h5 id="methods">Methods</h5>
<p>First I needed to identify the two leads of each film (2000-2015, with 10,000+ votes) to calculate the age difference. Unfortunately, there is no direct way to get this information from the IMDb dataset. I, therefore, used a quick-and-dirty approve and chose the first actress and actor in the IMDb cast credits as leads. If I did not find both an actress and an actor in the first three entries (in credits order), I removed the whole movie from the sample. With this method, I was able to get the leading actresses and actors of 1,201 movies. Note that they are not necessarily movie couples. I am aware that a manually selected sample would have been better but considering the simplicity of my approach; I think that the results are acceptable for this analysis. Feel free to check it yourself <a href="/assets/data/age_gap_2015.csv">here</a>.</p>

<h5 id="results">Results</h5>
<p>When we look at the box-plot of the age differences, we can see that on average the leading actor is <strong>five years older</strong> than his female co-star. It also tells us that in approximately 75% of all movies in our sample have an older male lead. Based on this data, the answer to the question from the title is <em>“Yes”</em> even though the age gap might be not as big as expected.</p>

<p><a href="/assets/images/age-gap/plot_2.png"><img src="/assets/images/age-gap/plot_2.png" alt="Age Gap Boxplot" title="Age Gap Boxplot" /></a></p>

<p>Finally, I also created a density plot which summarizes all data points in a nice looking, colorful graph. The area below the gray dashed line stands for all the movies in which the leading actor is older :</p>

<p><a href="/assets/images/age-gap/plot_1_hd.png"><img src="/assets/images/age-gap/plot_1.png" alt="Age Gap Plot" title="Age Gap Plot" /></a></p>

	  ]]></description>
	</item>

	<item>
	  <title>Actresses Are on Average 7 Years Younger</title>
	  <link>//imdb-age-distribution</link>
	  <author>CuriousGnu</author>
	  <pubDate>2015-11-02T21:10:00+01:00</pubDate>
	  <guid>//imdb-age-distribution</guid>
	  <description><![CDATA[
	     <p>The IMDb dataset is a great source for everyone loves movies and numbers. After I had figured out how to <a href="http://imdbpy.sourceforge.net/support.html" target="_blank">import the data</a> into a local SQL database, the first thing I did was to look at the age of the actresses and actors during filming.</p>

<p>It turns out that the average actress is, with a median age of 32, <strong>seven years younger</strong> than her male counterpart who is on average 39 years old. The diagram below shows that the distribution of ages of actresses is more skewed to the right (γ1=.912) than those of ages of actors (γ1=.483). This suggests that there is a relatively higher demand for actresses under the age of 35. Interestingly we do not see such an apparent age preference in the casting of actors.</p>

<p><a href="/assets/images/age-dist/plot_hd.png"><img src="/assets/images/age-dist/plot.png" alt="Age Distribution Plot" title="Age Distribution Plot" /></a></p>

<p>The sample consists of all roles played by actresses (n=21,551) and actors (n=50,165) in U.S. movie released between 2000 and 2015, with more than 10,000 IMDb-Votes. By the way, in the United States, the median age of females and males is 39.2 years and 36.5 years respectively (<a href="https://www.cia.gov/library/publications/the-world-factbook/geos/us.html">The World Factbook, 2015</a>).</p>

<p><small>Photo: “California Movie Theater Berkeley” by <a href="https://flic.kr/p/aM4GwX">Russell Mondy</a> is licensed under CC BY-NC 2.0</small></p>

	  ]]></description>
	</item>


</channel>
</rss>
